%% Clear workspace

clear;
%% Create fuzzy controller

fzPI = mamfis(...
    'Name', 'fizzypi_controller',...        % Controller name
    'AndMethod', 'min',...                  % AND implements with min operator
    'AggregationMethod', 'max',...          % ALSO implements with max operator
    'DefuzzificationMethod', 'centroid',... % Defuzzifier implements with COA technique
    'NumInputs', 2, 'NumInputMFs', 9,...
    'NumOutputs', 1, 'NumOutputMFs', 9,...
    'AddRule', 'none');                     % Î™nference function with Mandami rule

%% Inputs

fzPI.Inputs(1).Name = 'Error';
fzPI.Inputs(1).Range = [-1 1];
fzPI.Inputs(1).MembershipFunctions(1).Name = 'NV';
fzPI.Inputs(1).MembershipFunctions(1).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(1).Parameters = [-1.25 -1 -0.75];
fzPI.Inputs(1).MembershipFunctions(2).Name = 'NL';
fzPI.Inputs(1).MembershipFunctions(2).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(2).Parameters = [-1 -0.75 -0.5];
fzPI.Inputs(1).MembershipFunctions(3).Name = 'NM';
fzPI.Inputs(1).MembershipFunctions(3).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(3).Parameters = [-0.75 -0.5 -0.25];
fzPI.Inputs(1).MembershipFunctions(4).Name = 'NS';
fzPI.Inputs(1).MembershipFunctions(4).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(4).Parameters = [-0.5 -0.25 0];
fzPI.Inputs(1).MembershipFunctions(5).Name = 'ZR';
fzPI.Inputs(1).MembershipFunctions(5).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(5).Parameters = [-0.25 0 0.25];
fzPI.Inputs(1).MembershipFunctions(6).Name = 'PS';
fzPI.Inputs(1).MembershipFunctions(6).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(6).Parameters = [0 0.25 0.5];
fzPI.Inputs(1).MembershipFunctions(7).Name = 'PM';
fzPI.Inputs(1).MembershipFunctions(7).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(7).Parameters = [0.25 0.5 0.75];
fzPI.Inputs(1).MembershipFunctions(8).Name = 'PL';
fzPI.Inputs(1).MembershipFunctions(8).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(8).Parameters = [0.5 0.75 1];
fzPI.Inputs(1).MembershipFunctions(9).Name = 'PV';
fzPI.Inputs(1).MembershipFunctions(9).Type = 'trimf';
fzPI.Inputs(1).MembershipFunctions(9).Parameters = [0.75 1 1.25];

fzPI.Inputs(2).Name = 'dError';
fzPI.Inputs(2).Range = [-1 1];
fzPI.Inputs(2).MembershipFunctions(1).Name = 'NV';
fzPI.Inputs(2).MembershipFunctions(1).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(1).Parameters = [-1.25 -1 -0.75];
fzPI.Inputs(2).MembershipFunctions(2).Name = 'NL';
fzPI.Inputs(2).MembershipFunctions(2).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(2).Parameters = [-1 -0.75 -0.5];
fzPI.Inputs(2).MembershipFunctions(3).Name = 'NM';
fzPI.Inputs(2).MembershipFunctions(3).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(3).Parameters = [-0.75 -0.5 -0.25];
fzPI.Inputs(2).MembershipFunctions(4).Name = 'NS';
fzPI.Inputs(2).MembershipFunctions(4).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(4).Parameters = [-0.5 -0.25 0];
fzPI.Inputs(2).MembershipFunctions(5).Name = 'ZR';
fzPI.Inputs(2).MembershipFunctions(5).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(5).Parameters = [-0.25 0 0.25];
fzPI.Inputs(2).MembershipFunctions(6).Name = 'PS';
fzPI.Inputs(2).MembershipFunctions(6).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(6).Parameters = [0 0.25 0.5];
fzPI.Inputs(2).MembershipFunctions(7).Name = 'PM';
fzPI.Inputs(2).MembershipFunctions(7).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(7).Parameters = [0.25 0.5 0.75];
fzPI.Inputs(2).MembershipFunctions(8).Name = 'PL';
fzPI.Inputs(2).MembershipFunctions(8).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(8).Parameters = [0.5 0.75 1];
fzPI.Inputs(2).MembershipFunctions(9).Name = 'PV';
fzPI.Inputs(2).MembershipFunctions(9).Type = 'trimf';
fzPI.Inputs(2).MembershipFunctions(9).Parameters = [0.75 1 1.25];

% plotmf(fzPI, 'input', 1, 1000);

%% Outputs

fzPI.Outputs(1).Name = 'Current';
fzPI.Outputs(1).Range = [-1 1];
fzPI.Outputs(1).MembershipFunctions(1).Name = 'NV';
fzPI.Outputs(1).MembershipFunctions(1).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(1).Parameters = [-1.25 -1 -0.75];
fzPI.Outputs(1).MembershipFunctions(2).Name = 'NL';
fzPI.Outputs(1).MembershipFunctions(2).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(2).Parameters = [-1 -0.75 -0.5];
fzPI.Outputs(1).MembershipFunctions(3).Name = 'NM';
fzPI.Outputs(1).MembershipFunctions(3).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(3).Parameters = [-0.75 -0.5 -0.25];
fzPI.Outputs(1).MembershipFunctions(4).Name = 'NS';
fzPI.Outputs(1).MembershipFunctions(4).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(4).Parameters = [-0.5 -0.25 0];
fzPI.Outputs(1).MembershipFunctions(5).Name = 'ZR';
fzPI.Outputs(1).MembershipFunctions(5).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(5).Parameters = [-0.25 0 0.25];
fzPI.Outputs(1).MembershipFunctions(6).Name = 'PS';
fzPI.Outputs(1).MembershipFunctions(6).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(6).Parameters = [0 0.25 0.5];
fzPI.Outputs(1).MembershipFunctions(7).Name = 'PM';
fzPI.Outputs(1).MembershipFunctions(7).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(7).Parameters = [0.25 0.5 0.75];
fzPI.Outputs(1).MembershipFunctions(8).Name = 'PL';
fzPI.Outputs(1).MembershipFunctions(8).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(8).Parameters = [0.5 0.75 1];
fzPI.Outputs(1).MembershipFunctions(9).Name = 'PV';
fzPI.Outputs(1).MembershipFunctions(9).Type = 'trimf';
fzPI.Outputs(1).MembershipFunctions(9).Parameters = [0.75 1 1.25];

% plotmf(fzPI, 'output', 1, 1000);

rules = [...
    "If Error is NV and dError is NV then Current is NV";...
    "If Error is NV and dError is NL then Current is NV";...
    "If Error is NV and dError is NM then Current is NV";...
    "If Error is NV and dError is NS then Current is NV";... 
    "If Error is NV and dError is ZR then Current is NV";...
    "If Error is NV and dError is PS then Current is NL";...
    "If Error is NV and dError is PM then Current is NM";...
    "If Error is NV and dError is PL then Current is NS";...
    "If Error is NV and dError is PV then Current is ZR";...
    
    "If Error is NL and dError is NV then Current is NV";...
    "If Error is NL and dError is NL then Current is NV";...
    "If Error is NL and dError is NM then Current is NV";... 
    "If Error is NL and dError is NS then Current is NV";...
    "If Error is NL and dError is ZR then Current is NL";...
    "If Error is NL and dError is PS then Current is NM";...
    "If Error is NL and dError is PM then Current is NS";...
    "If Error is NL and dError is PL then Current is ZR";...
    "If Error is NL and dError is PV then Current is PS";...
    
    "If Error is NM and dError is NV then Current is NV";...
    "If Error is NM and dError is NL then Current is NV";...
    "If Error is NM and dError is NM then Current is NV";...
    "If Error is NM and dError is NS then Current is NL";...
    "If Error is NM and dError is ZR then Current is NM";...
    "If Error is NM and dError is PS then Current is NS";...
    "If Error is NM and dError is PM then Current is ZR";...
    "If Error is NM and dError is PL then Current is PS";...
    "If Error is NM and dError is PV then Current is PM";...
    
    "If Error is NS and dError is NV then Current is NV";...
    "If Error is NS and dError is NL then Current is NV";...
    "If Error is NS and dError is NM then Current is NL";...
    "If Error is NS and dError is NS then Current is NM";...
    "If Error is NS and dError is ZR then Current is NS";...
    "If Error is NS and dError is PS then Current is ZR";...
    "If Error is NS and dError is PM then Current is PS";...
    "If Error is NS and dError is PL then Current is PM";...
    "If Error is NS and dError is PV then Current is PL";...  
    
    "If Error is ZR and dError is NV then Current is NV";...
    "If Error is ZR and dError is NL then Current is NL";...
    "If Error is ZR and dError is NM then Current is NM";...
    "If Error is ZR and dError is NS then Current is NS";...
    "If Error is ZR and dError is ZR then Current is ZR";...
    "If Error is ZR and dError is PS then Current is PS";...
    "If Error is ZR and dError is PM then Current is PM";...
    "If Error is ZR and dError is PL then Current is PL";...
    "If Error is ZR and dError is PV then Current is PV";...
    
    "If Error is PS and dError is NV then Current is NL";...
    "If Error is PS and dError is NL then Current is NM";...
    "If Error is PS and dError is NM then Current is NS";...
    "If Error is PS and dError is NS then Current is ZR";...
    "If Error is PS and dError is ZR then Current is PS";...
    "If Error is PS and dError is PS then Current is PM";...
    "If Error is PS and dError is PM then Current is PL";...
    "If Error is PS and dError is PL then Current is PV";...    
    "If Error is PS and dError is PV then Current is PV";... 
    
    "If Error is PM and dError is NV then Current is NM";...
    "If Error is PM and dError is NL then Current is NS";...
    "If Error is PM and dError is NM then Current is ZR";...
    "If Error is PM and dError is NS then Current is PS";...
    "If Error is PM and dError is ZR then Current is PM";...
    "If Error is PM and dError is PS then Current is PL";...
    "If Error is PM and dError is PM then Current is PV";...     
    "If Error is PM and dError is PL then Current is PV";...      
    "If Error is PM and dError is PV then Current is PV";...    
    
    "If Error is PL and dError is NV then Current is NS";...
    "If Error is PL and dError is NL then Current is ZR";...
    "If Error is PL and dError is NM then Current is PS";...
    "If Error is PL and dError is NS then Current is PM";...
    "If Error is PL and dError is ZR then Current is PL";...
    "If Error is PL and dError is PS then Current is PV";...
    "If Error is PL and dError is PM then Current is PV";...
    "If Error is PL and dError is PL then Current is PV";... 
    "If Error is PL and dError is PV then Current is PV";...
    
    "If Error is PV and dError is NV then Current is ZR";...
    "If Error is PV and dError is NL then Current is PS";...
    "If Error is PV and dError is NM then Current is PM";...
    "If Error is PV and dError is NS then Current is PL";...
    "If Error is PV and dError is ZR then Current is PV";...    
    "If Error is PV and dError is PS then Current is PV";...    
    "If Error is PV and dError is PM then Current is PV";...    
    "If Error is PV and dError is PL then Current is PV";...     
    "If Error is PV and dError is PV then Current is PV";...    
    ];

fzPI = addRule(fzPI, rules);

gensurf(fzPI);